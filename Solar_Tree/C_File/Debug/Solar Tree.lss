
Solar Tree.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000094c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000006c  00800060  0000094c  000009c0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000006cc  00000000  00000000  00000a2c  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000085  00000000  00000000  000010f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 000000c0  00000000  00000000  00001180  2**3
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000017ff  00000000  00000000  00001240  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000024d  00000000  00000000  00002a3f  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000007e3  00000000  00000000  00002c8c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000144  00000000  00000000  00003470  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000001a5  00000000  00000000  000035b4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000104a  00000000  00000000  00003759  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ec e4       	ldi	r30, 0x4C	; 76
  68:	f9 e0       	ldi	r31, 0x09	; 9
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	ac 3c       	cpi	r26, 0xCC	; 204
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	ac ec       	ldi	r26, 0xCC	; 204
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	ac 3c       	cpi	r26, 0xCC	; 204
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 56 02 	call	0x4ac	; 0x4ac <main>
  8a:	0c 94 a4 04 	jmp	0x948	; 0x948 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <Lcd_cmd>:

//***************************************LCD START*************************************************//

void Lcd_cmd(char x)
{
	PORTB = x;
  92:	88 bb       	out	0x18, r24	; 24
	PORTC = 0x04; //|= (1<<PINC2)
  94:	84 e0       	ldi	r24, 0x04	; 4
  96:	85 bb       	out	0x15, r24	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  98:	83 ec       	ldi	r24, 0xC3	; 195
  9a:	99 e0       	ldi	r25, 0x09	; 9
  9c:	01 97       	sbiw	r24, 0x01	; 1
  9e:	f1 f7       	brne	.-4      	; 0x9c <Lcd_cmd+0xa>
  a0:	00 c0       	rjmp	.+0      	; 0xa2 <Lcd_cmd+0x10>
  a2:	00 00       	nop
	_delay_ms(10);
	PORTC = 0x00;     //&= ~(1<<PINC2); 
  a4:	15 ba       	out	0x15, r1	; 21
  a6:	83 ec       	ldi	r24, 0xC3	; 195
  a8:	99 e0       	ldi	r25, 0x09	; 9
  aa:	01 97       	sbiw	r24, 0x01	; 1
  ac:	f1 f7       	brne	.-4      	; 0xaa <Lcd_cmd+0x18>
  ae:	00 c0       	rjmp	.+0      	; 0xb0 <Lcd_cmd+0x1e>
  b0:	00 00       	nop
	_delay_ms(10);
}
  b2:	08 95       	ret

000000b4 <Rotation_Plus>:
//*********************************************SERVO START***********************************************//
int x = Ref, y = Ref;
int p = Ref, r = Ref;

int Rotation_Plus(int a)
{
  b4:	9c 01       	movw	r18, r24
	
	int i=1, n;
	while(bit_is_clear(PINA, 0))
  b6:	c8 99       	sbic	0x19, 0	; 25
  b8:	16 c0       	rjmp	.+44     	; 0xe6 <Rotation_Plus+0x32>
#define Ref 1500                      //Servo
//*********************************************SERVO START***********************************************//
int x = Ref, y = Ref;
int p = Ref, r = Ref;

int Rotation_Plus(int a)
  ba:	87 ef       	ldi	r24, 0xF7	; 247
  bc:	9f ef       	ldi	r25, 0xFF	; 255
  be:	82 1b       	sub	r24, r18
  c0:	93 0b       	sbc	r25, r19
{
	
	int i=1, n;
	while(bit_is_clear(PINA, 0))
	{
		OCR1A = ICR1 - (a+(9*i));
  c2:	26 b5       	in	r18, 0x26	; 38
  c4:	37 b5       	in	r19, 0x27	; 39
  c6:	28 0f       	add	r18, r24
  c8:	39 1f       	adc	r19, r25
  ca:	3b bd       	out	0x2b, r19	; 43
  cc:	2a bd       	out	0x2a, r18	; 42
  ce:	2f e9       	ldi	r18, 0x9F	; 159
  d0:	36 e8       	ldi	r19, 0x86	; 134
  d2:	41 e0       	ldi	r20, 0x01	; 1
  d4:	21 50       	subi	r18, 0x01	; 1
  d6:	30 40       	sbci	r19, 0x00	; 0
  d8:	40 40       	sbci	r20, 0x00	; 0
  da:	e1 f7       	brne	.-8      	; 0xd4 <Rotation_Plus+0x20>
  dc:	00 c0       	rjmp	.+0      	; 0xde <Rotation_Plus+0x2a>
  de:	00 00       	nop

int Rotation_Plus(int a)
{
	
	int i=1, n;
	while(bit_is_clear(PINA, 0))
  e0:	09 97       	sbiw	r24, 0x09	; 9
  e2:	c8 9b       	sbis	0x19, 0	; 25
  e4:	ee cf       	rjmp	.-36     	; 0xc2 <Rotation_Plus+0xe>
	{
		OCR1A = ICR1 - (a+(9*i));
		_delay_ms(500);
		i++;
	}
	n = ICR1 - OCR1A;
  e6:	86 b5       	in	r24, 0x26	; 38
  e8:	97 b5       	in	r25, 0x27	; 39
  ea:	2a b5       	in	r18, 0x2a	; 42
  ec:	3b b5       	in	r19, 0x2b	; 43
  ee:	82 1b       	sub	r24, r18
  f0:	93 0b       	sbc	r25, r19
	return n;
}
  f2:	08 95       	ret

000000f4 <Rotation_Minus>:

int Rotation_Minus(int a)
{
	
	int i=0 ,n;
	while(bit_is_clear(PINA, 1))
  f4:	c9 99       	sbic	0x19, 1	; 25
  f6:	15 c0       	rjmp	.+42     	; 0x122 <Rotation_Minus+0x2e>
	}
	n = ICR1 - OCR1A;
	return n;
}

int Rotation_Minus(int a)
  f8:	90 95       	com	r25
  fa:	81 95       	neg	r24
  fc:	9f 4f       	sbci	r25, 0xFF	; 255
{
	
	int i=0 ,n;
	while(bit_is_clear(PINA, 1))
	{
		OCR1A = ICR1 - (a-(9*i));
  fe:	26 b5       	in	r18, 0x26	; 38
 100:	37 b5       	in	r19, 0x27	; 39
 102:	28 0f       	add	r18, r24
 104:	39 1f       	adc	r19, r25
 106:	3b bd       	out	0x2b, r19	; 43
 108:	2a bd       	out	0x2a, r18	; 42
 10a:	2f e9       	ldi	r18, 0x9F	; 159
 10c:	36 e8       	ldi	r19, 0x86	; 134
 10e:	41 e0       	ldi	r20, 0x01	; 1
 110:	21 50       	subi	r18, 0x01	; 1
 112:	30 40       	sbci	r19, 0x00	; 0
 114:	40 40       	sbci	r20, 0x00	; 0
 116:	e1 f7       	brne	.-8      	; 0x110 <Rotation_Minus+0x1c>
 118:	00 c0       	rjmp	.+0      	; 0x11a <Rotation_Minus+0x26>
 11a:	00 00       	nop

int Rotation_Minus(int a)
{
	
	int i=0 ,n;
	while(bit_is_clear(PINA, 1))
 11c:	09 96       	adiw	r24, 0x09	; 9
 11e:	c9 9b       	sbis	0x19, 1	; 25
 120:	ee cf       	rjmp	.-36     	; 0xfe <Rotation_Minus+0xa>
	{
		OCR1A = ICR1 - (a-(9*i));
		_delay_ms(500);
		i++;
	}
	n = ICR1 - OCR1A;
 122:	86 b5       	in	r24, 0x26	; 38
 124:	97 b5       	in	r25, 0x27	; 39
 126:	2a b5       	in	r18, 0x2a	; 42
 128:	3b b5       	in	r19, 0x2b	; 43
 12a:	82 1b       	sub	r24, r18
 12c:	93 0b       	sbc	r25, r19
	return n;
}
 12e:	08 95       	ret

00000130 <Retain_Position>:

int Retain_Position(int a)
{
 130:	cf 93       	push	r28
 132:	df 93       	push	r29
 134:	ec 01       	movw	r28, r24
	Lcd_cmd(0x8A);
 136:	8a e8       	ldi	r24, 0x8A	; 138
 138:	90 e0       	ldi	r25, 0x00	; 0
 13a:	0e 94 49 00 	call	0x92	; 0x92 <Lcd_cmd>
 13e:	87 ea       	ldi	r24, 0xA7	; 167
 140:	91 e6       	ldi	r25, 0x61	; 97
 142:	01 97       	sbiw	r24, 0x01	; 1
 144:	f1 f7       	brne	.-4      	; 0x142 <Retain_Position+0x12>
 146:	00 c0       	rjmp	.+0      	; 0x148 <Retain_Position+0x18>
 148:	00 00       	nop
	_delay_ms(100);
	Display("...");
 14a:	80 e6       	ldi	r24, 0x60	; 96
 14c:	90 e0       	ldi	r25, 0x00	; 0
 14e:	0e 94 3d 02 	call	0x47a	; 0x47a <Display>
 152:	a7 ea       	ldi	r26, 0xA7	; 167
 154:	b1 e6       	ldi	r27, 0x61	; 97
 156:	11 97       	sbiw	r26, 0x01	; 1
 158:	f1 f7       	brne	.-4      	; 0x156 <Retain_Position+0x26>
 15a:	00 c0       	rjmp	.+0      	; 0x15c <Retain_Position+0x2c>
 15c:	00 00       	nop
	_delay_ms(100);
	
	int n;
	OCR1A = ICR1 - a;
 15e:	86 b5       	in	r24, 0x26	; 38
 160:	97 b5       	in	r25, 0x27	; 39
 162:	8c 1b       	sub	r24, r28
 164:	9d 0b       	sbc	r25, r29
 166:	9b bd       	out	0x2b, r25	; 43
 168:	8a bd       	out	0x2a, r24	; 42
 16a:	8f e9       	ldi	r24, 0x9F	; 159
 16c:	96 e8       	ldi	r25, 0x86	; 134
 16e:	a1 e0       	ldi	r26, 0x01	; 1
 170:	81 50       	subi	r24, 0x01	; 1
 172:	90 40       	sbci	r25, 0x00	; 0
 174:	a0 40       	sbci	r26, 0x00	; 0
 176:	e1 f7       	brne	.-8      	; 0x170 <Retain_Position+0x40>
 178:	00 c0       	rjmp	.+0      	; 0x17a <Retain_Position+0x4a>
 17a:	00 00       	nop
	_delay_ms(500);
	n = ICR1 - OCR1A;
 17c:	86 b5       	in	r24, 0x26	; 38
 17e:	97 b5       	in	r25, 0x27	; 39
 180:	2a b5       	in	r18, 0x2a	; 42
 182:	3b b5       	in	r19, 0x2b	; 43
 184:	82 1b       	sub	r24, r18
 186:	93 0b       	sbc	r25, r19
	return n;
}
 188:	df 91       	pop	r29
 18a:	cf 91       	pop	r28
 18c:	08 95       	ret

0000018e <Reset_to_Zero>:

int Reset_to_Zero(int a)
{
 18e:	0f 93       	push	r16
 190:	1f 93       	push	r17
 192:	9c 01       	movw	r18, r24
	int i, n, p, k;
	
	
	if(a>Ref)            
 194:	05 e0       	ldi	r16, 0x05	; 5
 196:	8d 3d       	cpi	r24, 0xDD	; 221
 198:	90 07       	cpc	r25, r16
 19a:	34 f1       	brlt	.+76     	; 0x1e8 <Reset_to_Zero+0x5a>
	{
		p = a - 1500;
 19c:	8c 5d       	subi	r24, 0xDC	; 220
 19e:	95 40       	sbci	r25, 0x05	; 5
		k = p/9;
 1a0:	69 e0       	ldi	r22, 0x09	; 9
 1a2:	70 e0       	ldi	r23, 0x00	; 0
 1a4:	0e 94 7d 04 	call	0x8fa	; 0x8fa <__divmodhi4>
		for(i=1; i <= k; i++)
 1a8:	16 16       	cp	r1, r22
 1aa:	17 06       	cpc	r1, r23
 1ac:	0c f0       	brlt	.+2      	; 0x1b0 <Reset_to_Zero+0x22>
 1ae:	42 c0       	rjmp	.+132    	; 0x234 <Reset_to_Zero+0xa6>
	_delay_ms(500);
	n = ICR1 - OCR1A;
	return n;
}

int Reset_to_Zero(int a)
 1b0:	89 e0       	ldi	r24, 0x09	; 9
 1b2:	90 e0       	ldi	r25, 0x00	; 0
 1b4:	82 1b       	sub	r24, r18
 1b6:	93 0b       	sbc	r25, r19
	
	if(a>Ref)            
	{
		p = a - 1500;
		k = p/9;
		for(i=1; i <= k; i++)
 1b8:	41 e0       	ldi	r20, 0x01	; 1
 1ba:	50 e0       	ldi	r21, 0x00	; 0
		{
			OCR1A = ICR1 - (a-(9*i));
 1bc:	26 b5       	in	r18, 0x26	; 38
 1be:	37 b5       	in	r19, 0x27	; 39
 1c0:	28 0f       	add	r18, r24
 1c2:	39 1f       	adc	r19, r25
 1c4:	3b bd       	out	0x2b, r19	; 43
 1c6:	2a bd       	out	0x2a, r18	; 42
 1c8:	0f e9       	ldi	r16, 0x9F	; 159
 1ca:	16 e8       	ldi	r17, 0x86	; 134
 1cc:	21 e0       	ldi	r18, 0x01	; 1
 1ce:	01 50       	subi	r16, 0x01	; 1
 1d0:	10 40       	sbci	r17, 0x00	; 0
 1d2:	20 40       	sbci	r18, 0x00	; 0
 1d4:	e1 f7       	brne	.-8      	; 0x1ce <Reset_to_Zero+0x40>
 1d6:	00 c0       	rjmp	.+0      	; 0x1d8 <Reset_to_Zero+0x4a>
 1d8:	00 00       	nop
	
	if(a>Ref)            
	{
		p = a - 1500;
		k = p/9;
		for(i=1; i <= k; i++)
 1da:	4f 5f       	subi	r20, 0xFF	; 255
 1dc:	5f 4f       	sbci	r21, 0xFF	; 255
 1de:	09 96       	adiw	r24, 0x09	; 9
 1e0:	64 17       	cp	r22, r20
 1e2:	75 07       	cpc	r23, r21
 1e4:	5c f7       	brge	.-42     	; 0x1bc <Reset_to_Zero+0x2e>
 1e6:	26 c0       	rjmp	.+76     	; 0x234 <Reset_to_Zero+0xa6>
		}
	}
	
	if(a<=Ref)
	{
		p = 1500 - a;
 1e8:	8c ed       	ldi	r24, 0xDC	; 220
 1ea:	95 e0       	ldi	r25, 0x05	; 5
 1ec:	82 1b       	sub	r24, r18
 1ee:	93 0b       	sbc	r25, r19
		k = p/9;
 1f0:	69 e0       	ldi	r22, 0x09	; 9
 1f2:	70 e0       	ldi	r23, 0x00	; 0
 1f4:	0e 94 7d 04 	call	0x8fa	; 0x8fa <__divmodhi4>
		for(i=1; i <= k ; i++)
 1f8:	16 16       	cp	r1, r22
 1fa:	17 06       	cpc	r1, r23
 1fc:	dc f4       	brge	.+54     	; 0x234 <Reset_to_Zero+0xa6>
	_delay_ms(500);
	n = ICR1 - OCR1A;
	return n;
}

int Reset_to_Zero(int a)
 1fe:	87 ef       	ldi	r24, 0xF7	; 247
 200:	9f ef       	ldi	r25, 0xFF	; 255
 202:	82 1b       	sub	r24, r18
 204:	93 0b       	sbc	r25, r19
	
	if(a<=Ref)
	{
		p = 1500 - a;
		k = p/9;
		for(i=1; i <= k ; i++)
 206:	41 e0       	ldi	r20, 0x01	; 1
 208:	50 e0       	ldi	r21, 0x00	; 0
		{
			OCR1A = ICR1 - (a+(9*i));
 20a:	26 b5       	in	r18, 0x26	; 38
 20c:	37 b5       	in	r19, 0x27	; 39
 20e:	28 0f       	add	r18, r24
 210:	39 1f       	adc	r19, r25
 212:	3b bd       	out	0x2b, r19	; 43
 214:	2a bd       	out	0x2a, r18	; 42
 216:	0f e9       	ldi	r16, 0x9F	; 159
 218:	16 e8       	ldi	r17, 0x86	; 134
 21a:	21 e0       	ldi	r18, 0x01	; 1
 21c:	01 50       	subi	r16, 0x01	; 1
 21e:	10 40       	sbci	r17, 0x00	; 0
 220:	20 40       	sbci	r18, 0x00	; 0
 222:	e1 f7       	brne	.-8      	; 0x21c <Reset_to_Zero+0x8e>
 224:	00 c0       	rjmp	.+0      	; 0x226 <Reset_to_Zero+0x98>
 226:	00 00       	nop
	
	if(a<=Ref)
	{
		p = 1500 - a;
		k = p/9;
		for(i=1; i <= k ; i++)
 228:	4f 5f       	subi	r20, 0xFF	; 255
 22a:	5f 4f       	sbci	r21, 0xFF	; 255
 22c:	09 97       	sbiw	r24, 0x09	; 9
 22e:	64 17       	cp	r22, r20
 230:	75 07       	cpc	r23, r21
 232:	5c f7       	brge	.-42     	; 0x20a <Reset_to_Zero+0x7c>
		{
			OCR1A = ICR1 - (a+(9*i));
			_delay_ms(500);
		}
	}
	n = ICR1 - OCR1A;
 234:	86 b5       	in	r24, 0x26	; 38
 236:	97 b5       	in	r25, 0x27	; 39
 238:	2a b5       	in	r18, 0x2a	; 42
 23a:	3b b5       	in	r19, 0x2b	; 43
 23c:	82 1b       	sub	r24, r18
 23e:	93 0b       	sbc	r25, r19
	return n;
}
 240:	1f 91       	pop	r17
 242:	0f 91       	pop	r16
 244:	08 95       	ret

00000246 <Rotation_Plus_1>:
//***************************************SERVO END**************************************************//

//*********************************************SERVO 1 START***********************************************//

int Rotation_Plus_1(int a)
{
 246:	9c 01       	movw	r18, r24
	PORTD |= 1<<PIND0;
 248:	90 9a       	sbi	0x12, 0	; 18
	
	int i=1, n;
	while(bit_is_clear(PINA, 2))
 24a:	ca 99       	sbic	0x19, 2	; 25
 24c:	17 c0       	rjmp	.+46     	; 0x27c <Rotation_Plus_1+0x36>
}
//***************************************SERVO END**************************************************//

//*********************************************SERVO 1 START***********************************************//

int Rotation_Plus_1(int a)
 24e:	84 ef       	ldi	r24, 0xF4	; 244
 250:	9f ef       	ldi	r25, 0xFF	; 255
 252:	82 1b       	sub	r24, r18
 254:	93 0b       	sbc	r25, r19
	PORTD |= 1<<PIND0;
	
	int i=1, n;
	while(bit_is_clear(PINA, 2))
	{
		PORTD |= 1<<PIND0;
 256:	90 9a       	sbi	0x12, 0	; 18
		OCR1A = ICR1 - (a+(12*i));
 258:	26 b5       	in	r18, 0x26	; 38
 25a:	37 b5       	in	r19, 0x27	; 39
 25c:	28 0f       	add	r18, r24
 25e:	39 1f       	adc	r19, r25
 260:	3b bd       	out	0x2b, r19	; 43
 262:	2a bd       	out	0x2a, r18	; 42
 264:	2f e9       	ldi	r18, 0x9F	; 159
 266:	36 e8       	ldi	r19, 0x86	; 134
 268:	41 e0       	ldi	r20, 0x01	; 1
 26a:	21 50       	subi	r18, 0x01	; 1
 26c:	30 40       	sbci	r19, 0x00	; 0
 26e:	40 40       	sbci	r20, 0x00	; 0
 270:	e1 f7       	brne	.-8      	; 0x26a <Rotation_Plus_1+0x24>
 272:	00 c0       	rjmp	.+0      	; 0x274 <Rotation_Plus_1+0x2e>
 274:	00 00       	nop
int Rotation_Plus_1(int a)
{
	PORTD |= 1<<PIND0;
	
	int i=1, n;
	while(bit_is_clear(PINA, 2))
 276:	0c 97       	sbiw	r24, 0x0c	; 12
 278:	ca 9b       	sbis	0x19, 2	; 25
 27a:	ed cf       	rjmp	.-38     	; 0x256 <Rotation_Plus_1+0x10>
		OCR1A = ICR1 - (a+(12*i));
		_delay_ms(500);
		i++;
	}
	
	n = ICR1 - OCR1A;
 27c:	86 b5       	in	r24, 0x26	; 38
 27e:	97 b5       	in	r25, 0x27	; 39
 280:	2a b5       	in	r18, 0x2a	; 42
 282:	3b b5       	in	r19, 0x2b	; 43
 284:	82 1b       	sub	r24, r18
 286:	93 0b       	sbc	r25, r19
	return n;
}
 288:	08 95       	ret

0000028a <Rotation_Minus_1>:

int Rotation_Minus_1(int a)
{
	
	PORTD |= 1<<PIND0;
 28a:	90 9a       	sbi	0x12, 0	; 18
	
	int i=0 ,n;
	while(bit_is_clear(PINA, 3))
 28c:	cb 99       	sbic	0x19, 3	; 25
 28e:	15 c0       	rjmp	.+42     	; 0x2ba <Rotation_Minus_1+0x30>
	
	n = ICR1 - OCR1A;
	return n;
}

int Rotation_Minus_1(int a)
 290:	90 95       	com	r25
 292:	81 95       	neg	r24
 294:	9f 4f       	sbci	r25, 0xFF	; 255
	PORTD |= 1<<PIND0;
	
	int i=0 ,n;
	while(bit_is_clear(PINA, 3))
	{
		OCR1A = ICR1 - (a-(12*i));
 296:	26 b5       	in	r18, 0x26	; 38
 298:	37 b5       	in	r19, 0x27	; 39
 29a:	28 0f       	add	r18, r24
 29c:	39 1f       	adc	r19, r25
 29e:	3b bd       	out	0x2b, r19	; 43
 2a0:	2a bd       	out	0x2a, r18	; 42
 2a2:	2f e9       	ldi	r18, 0x9F	; 159
 2a4:	36 e8       	ldi	r19, 0x86	; 134
 2a6:	41 e0       	ldi	r20, 0x01	; 1
 2a8:	21 50       	subi	r18, 0x01	; 1
 2aa:	30 40       	sbci	r19, 0x00	; 0
 2ac:	40 40       	sbci	r20, 0x00	; 0
 2ae:	e1 f7       	brne	.-8      	; 0x2a8 <Rotation_Minus_1+0x1e>
 2b0:	00 c0       	rjmp	.+0      	; 0x2b2 <Rotation_Minus_1+0x28>
 2b2:	00 00       	nop
{
	
	PORTD |= 1<<PIND0;
	
	int i=0 ,n;
	while(bit_is_clear(PINA, 3))
 2b4:	0c 96       	adiw	r24, 0x0c	; 12
 2b6:	cb 9b       	sbis	0x19, 3	; 25
 2b8:	ee cf       	rjmp	.-36     	; 0x296 <Rotation_Minus_1+0xc>
	{
		OCR1A = ICR1 - (a-(12*i));
		_delay_ms(500);
		i++;
	}
	n = ICR1 - OCR1A;
 2ba:	86 b5       	in	r24, 0x26	; 38
 2bc:	97 b5       	in	r25, 0x27	; 39
 2be:	2a b5       	in	r18, 0x2a	; 42
 2c0:	3b b5       	in	r19, 0x2b	; 43
 2c2:	82 1b       	sub	r24, r18
 2c4:	93 0b       	sbc	r25, r19
	return n;
}
 2c6:	08 95       	ret

000002c8 <Retain_Position_1>:


int Retain_Position_1(int a)
{
 2c8:	cf 93       	push	r28
 2ca:	df 93       	push	r29
 2cc:	ec 01       	movw	r28, r24
	PORTD |= 1<<PIND0;
 2ce:	90 9a       	sbi	0x12, 0	; 18
	
	Lcd_cmd(0x8A);
 2d0:	8a e8       	ldi	r24, 0x8A	; 138
 2d2:	90 e0       	ldi	r25, 0x00	; 0
 2d4:	0e 94 49 00 	call	0x92	; 0x92 <Lcd_cmd>
 2d8:	87 ea       	ldi	r24, 0xA7	; 167
 2da:	91 e6       	ldi	r25, 0x61	; 97
 2dc:	01 97       	sbiw	r24, 0x01	; 1
 2de:	f1 f7       	brne	.-4      	; 0x2dc <Retain_Position_1+0x14>
 2e0:	00 c0       	rjmp	.+0      	; 0x2e2 <Retain_Position_1+0x1a>
 2e2:	00 00       	nop
	_delay_ms(100);
	Display("...");
 2e4:	80 e6       	ldi	r24, 0x60	; 96
 2e6:	90 e0       	ldi	r25, 0x00	; 0
 2e8:	0e 94 3d 02 	call	0x47a	; 0x47a <Display>
 2ec:	a7 ea       	ldi	r26, 0xA7	; 167
 2ee:	b1 e6       	ldi	r27, 0x61	; 97
 2f0:	11 97       	sbiw	r26, 0x01	; 1
 2f2:	f1 f7       	brne	.-4      	; 0x2f0 <Retain_Position_1+0x28>
 2f4:	00 c0       	rjmp	.+0      	; 0x2f6 <Retain_Position_1+0x2e>
 2f6:	00 00       	nop
	_delay_ms(100);
	
	int n;
	OCR1A = ICR1 - a;
 2f8:	86 b5       	in	r24, 0x26	; 38
 2fa:	97 b5       	in	r25, 0x27	; 39
 2fc:	8c 1b       	sub	r24, r28
 2fe:	9d 0b       	sbc	r25, r29
 300:	9b bd       	out	0x2b, r25	; 43
 302:	8a bd       	out	0x2a, r24	; 42
 304:	8f e9       	ldi	r24, 0x9F	; 159
 306:	96 e8       	ldi	r25, 0x86	; 134
 308:	a1 e0       	ldi	r26, 0x01	; 1
 30a:	81 50       	subi	r24, 0x01	; 1
 30c:	90 40       	sbci	r25, 0x00	; 0
 30e:	a0 40       	sbci	r26, 0x00	; 0
 310:	e1 f7       	brne	.-8      	; 0x30a <Retain_Position_1+0x42>
 312:	00 c0       	rjmp	.+0      	; 0x314 <Retain_Position_1+0x4c>
 314:	00 00       	nop
	_delay_ms(500);
	n = ICR1 - OCR1A;
 316:	86 b5       	in	r24, 0x26	; 38
 318:	97 b5       	in	r25, 0x27	; 39
 31a:	2a b5       	in	r18, 0x2a	; 42
 31c:	3b b5       	in	r19, 0x2b	; 43
 31e:	82 1b       	sub	r24, r18
 320:	93 0b       	sbc	r25, r19
	return n;
}
 322:	df 91       	pop	r29
 324:	cf 91       	pop	r28
 326:	08 95       	ret

00000328 <Reset_to_Zero_1>:

int Reset_to_Zero_1(int a)
{
 328:	0f 93       	push	r16
 32a:	1f 93       	push	r17
 32c:	9c 01       	movw	r18, r24
	PORTD |= 1<<PIND0;
 32e:	90 9a       	sbi	0x12, 0	; 18
	
	int i, n, p, k;
	
	
	if(a>Ref)
 330:	05 e0       	ldi	r16, 0x05	; 5
 332:	8d 3d       	cpi	r24, 0xDD	; 221
 334:	90 07       	cpc	r25, r16
 336:	34 f1       	brlt	.+76     	; 0x384 <Reset_to_Zero_1+0x5c>
	{
		p = a - 1500;
 338:	8c 5d       	subi	r24, 0xDC	; 220
 33a:	95 40       	sbci	r25, 0x05	; 5
		k = p/12;
 33c:	6c e0       	ldi	r22, 0x0C	; 12
 33e:	70 e0       	ldi	r23, 0x00	; 0
 340:	0e 94 7d 04 	call	0x8fa	; 0x8fa <__divmodhi4>
		for(i=1; i <= k; i++)
 344:	16 16       	cp	r1, r22
 346:	17 06       	cpc	r1, r23
 348:	0c f0       	brlt	.+2      	; 0x34c <Reset_to_Zero_1+0x24>
 34a:	42 c0       	rjmp	.+132    	; 0x3d0 <Reset_to_Zero_1+0xa8>
	_delay_ms(500);
	n = ICR1 - OCR1A;
	return n;
}

int Reset_to_Zero_1(int a)
 34c:	8c e0       	ldi	r24, 0x0C	; 12
 34e:	90 e0       	ldi	r25, 0x00	; 0
 350:	82 1b       	sub	r24, r18
 352:	93 0b       	sbc	r25, r19
	
	if(a>Ref)
	{
		p = a - 1500;
		k = p/12;
		for(i=1; i <= k; i++)
 354:	41 e0       	ldi	r20, 0x01	; 1
 356:	50 e0       	ldi	r21, 0x00	; 0
		{
			OCR1A = ICR1 - (a-(12*i));
 358:	26 b5       	in	r18, 0x26	; 38
 35a:	37 b5       	in	r19, 0x27	; 39
 35c:	28 0f       	add	r18, r24
 35e:	39 1f       	adc	r19, r25
 360:	3b bd       	out	0x2b, r19	; 43
 362:	2a bd       	out	0x2a, r18	; 42
 364:	0f e9       	ldi	r16, 0x9F	; 159
 366:	16 e8       	ldi	r17, 0x86	; 134
 368:	21 e0       	ldi	r18, 0x01	; 1
 36a:	01 50       	subi	r16, 0x01	; 1
 36c:	10 40       	sbci	r17, 0x00	; 0
 36e:	20 40       	sbci	r18, 0x00	; 0
 370:	e1 f7       	brne	.-8      	; 0x36a <Reset_to_Zero_1+0x42>
 372:	00 c0       	rjmp	.+0      	; 0x374 <Reset_to_Zero_1+0x4c>
 374:	00 00       	nop
	
	if(a>Ref)
	{
		p = a - 1500;
		k = p/12;
		for(i=1; i <= k; i++)
 376:	4f 5f       	subi	r20, 0xFF	; 255
 378:	5f 4f       	sbci	r21, 0xFF	; 255
 37a:	0c 96       	adiw	r24, 0x0c	; 12
 37c:	64 17       	cp	r22, r20
 37e:	75 07       	cpc	r23, r21
 380:	5c f7       	brge	.-42     	; 0x358 <Reset_to_Zero_1+0x30>
 382:	26 c0       	rjmp	.+76     	; 0x3d0 <Reset_to_Zero_1+0xa8>
		}
	}
	
	if(a<=Ref)
	{
		p = 1500 - a;
 384:	8c ed       	ldi	r24, 0xDC	; 220
 386:	95 e0       	ldi	r25, 0x05	; 5
 388:	82 1b       	sub	r24, r18
 38a:	93 0b       	sbc	r25, r19
		k = p/12;
 38c:	6c e0       	ldi	r22, 0x0C	; 12
 38e:	70 e0       	ldi	r23, 0x00	; 0
 390:	0e 94 7d 04 	call	0x8fa	; 0x8fa <__divmodhi4>
		for(i=1; i <= k ; i++)
 394:	16 16       	cp	r1, r22
 396:	17 06       	cpc	r1, r23
 398:	dc f4       	brge	.+54     	; 0x3d0 <Reset_to_Zero_1+0xa8>
	_delay_ms(500);
	n = ICR1 - OCR1A;
	return n;
}

int Reset_to_Zero_1(int a)
 39a:	84 ef       	ldi	r24, 0xF4	; 244
 39c:	9f ef       	ldi	r25, 0xFF	; 255
 39e:	82 1b       	sub	r24, r18
 3a0:	93 0b       	sbc	r25, r19
	
	if(a<=Ref)
	{
		p = 1500 - a;
		k = p/12;
		for(i=1; i <= k ; i++)
 3a2:	41 e0       	ldi	r20, 0x01	; 1
 3a4:	50 e0       	ldi	r21, 0x00	; 0
		{
			OCR1A = ICR1 - (a+(12*i));
 3a6:	26 b5       	in	r18, 0x26	; 38
 3a8:	37 b5       	in	r19, 0x27	; 39
 3aa:	28 0f       	add	r18, r24
 3ac:	39 1f       	adc	r19, r25
 3ae:	3b bd       	out	0x2b, r19	; 43
 3b0:	2a bd       	out	0x2a, r18	; 42
 3b2:	0f e9       	ldi	r16, 0x9F	; 159
 3b4:	16 e8       	ldi	r17, 0x86	; 134
 3b6:	21 e0       	ldi	r18, 0x01	; 1
 3b8:	01 50       	subi	r16, 0x01	; 1
 3ba:	10 40       	sbci	r17, 0x00	; 0
 3bc:	20 40       	sbci	r18, 0x00	; 0
 3be:	e1 f7       	brne	.-8      	; 0x3b8 <Reset_to_Zero_1+0x90>
 3c0:	00 c0       	rjmp	.+0      	; 0x3c2 <Reset_to_Zero_1+0x9a>
 3c2:	00 00       	nop
	
	if(a<=Ref)
	{
		p = 1500 - a;
		k = p/12;
		for(i=1; i <= k ; i++)
 3c4:	4f 5f       	subi	r20, 0xFF	; 255
 3c6:	5f 4f       	sbci	r21, 0xFF	; 255
 3c8:	0c 97       	sbiw	r24, 0x0c	; 12
 3ca:	64 17       	cp	r22, r20
 3cc:	75 07       	cpc	r23, r21
 3ce:	5c f7       	brge	.-42     	; 0x3a6 <Reset_to_Zero_1+0x7e>
		{
			OCR1A = ICR1 - (a+(12*i));
			_delay_ms(500);
		}
	}
	n = ICR1 - OCR1A;
 3d0:	86 b5       	in	r24, 0x26	; 38
 3d2:	97 b5       	in	r25, 0x27	; 39
 3d4:	2a b5       	in	r18, 0x2a	; 42
 3d6:	3b b5       	in	r19, 0x2b	; 43
 3d8:	82 1b       	sub	r24, r18
 3da:	93 0b       	sbc	r25, r19
	return n;
}
 3dc:	1f 91       	pop	r17
 3de:	0f 91       	pop	r16
 3e0:	08 95       	ret

000003e2 <Led_On>:
//***************************************SERVO 1 END**************************************************//

//****************************************LED ON****************************************************//

void Led_On()
{
 3e2:	0f 93       	push	r16
 3e4:	1f 93       	push	r17
 3e6:	cf 93       	push	r28
 3e8:	df 93       	push	r29
	Lcd_cmd(0x01);
 3ea:	c9 e4       	ldi	r28, 0x49	; 73
 3ec:	d0 e0       	ldi	r29, 0x00	; 0
 3ee:	81 e0       	ldi	r24, 0x01	; 1
 3f0:	90 e0       	ldi	r25, 0x00	; 0
 3f2:	fe 01       	movw	r30, r28
 3f4:	09 95       	icall
 3f6:	87 ea       	ldi	r24, 0xA7	; 167
 3f8:	91 e6       	ldi	r25, 0x61	; 97
 3fa:	01 97       	sbiw	r24, 0x01	; 1
 3fc:	f1 f7       	brne	.-4      	; 0x3fa <Led_On+0x18>
 3fe:	00 c0       	rjmp	.+0      	; 0x400 <Led_On+0x1e>
 400:	00 00       	nop
	_delay_ms(100);
	Display("LED ON...");
 402:	0d e3       	ldi	r16, 0x3D	; 61
 404:	12 e0       	ldi	r17, 0x02	; 2
 406:	84 e6       	ldi	r24, 0x64	; 100
 408:	90 e0       	ldi	r25, 0x00	; 0
 40a:	f8 01       	movw	r30, r16
 40c:	09 95       	icall
 40e:	87 ea       	ldi	r24, 0xA7	; 167
 410:	91 e6       	ldi	r25, 0x61	; 97
 412:	01 97       	sbiw	r24, 0x01	; 1
 414:	f1 f7       	brne	.-4      	; 0x412 <Led_On+0x30>
 416:	00 c0       	rjmp	.+0      	; 0x418 <Led_On+0x36>
 418:	00 00       	nop
	_delay_ms(100);
	Lcd_cmd(0xC0);
 41a:	80 ec       	ldi	r24, 0xC0	; 192
 41c:	90 e0       	ldi	r25, 0x00	; 0
 41e:	fe 01       	movw	r30, r28
 420:	09 95       	icall
 422:	87 ea       	ldi	r24, 0xA7	; 167
 424:	91 e6       	ldi	r25, 0x61	; 97
 426:	01 97       	sbiw	r24, 0x01	; 1
 428:	f1 f7       	brne	.-4      	; 0x426 <Led_On+0x44>
 42a:	00 c0       	rjmp	.+0      	; 0x42c <Led_On+0x4a>
 42c:	00 00       	nop
	_delay_ms(100);
	Display("Night");
 42e:	8e e6       	ldi	r24, 0x6E	; 110
 430:	90 e0       	ldi	r25, 0x00	; 0
 432:	f8 01       	movw	r30, r16
 434:	09 95       	icall
 436:	87 ea       	ldi	r24, 0xA7	; 167
 438:	91 e6       	ldi	r25, 0x61	; 97
 43a:	01 97       	sbiw	r24, 0x01	; 1
 43c:	f1 f7       	brne	.-4      	; 0x43a <Led_On+0x58>
 43e:	00 c0       	rjmp	.+0      	; 0x440 <Led_On+0x5e>
 440:	00 00       	nop
	_delay_ms(100);
	
	while(bit_is_clear(PINA, 4))
 442:	cc 99       	sbic	0x19, 4	; 25
 444:	03 c0       	rjmp	.+6      	; 0x44c <Led_On+0x6a>
	{
		PORTD |= 1<<PIND3;
 446:	93 9a       	sbi	0x12, 3	; 18
	Lcd_cmd(0xC0);
	_delay_ms(100);
	Display("Night");
	_delay_ms(100);
	
	while(bit_is_clear(PINA, 4))
 448:	cc 9b       	sbis	0x19, 4	; 25
 44a:	fd cf       	rjmp	.-6      	; 0x446 <Led_On+0x64>
	{
		PORTD |= 1<<PIND3;
	}
}
 44c:	df 91       	pop	r29
 44e:	cf 91       	pop	r28
 450:	1f 91       	pop	r17
 452:	0f 91       	pop	r16
 454:	08 95       	ret

00000456 <Lcd_data>:
	PORTC = 0x00;     //&= ~(1<<PINC2); 
	_delay_ms(10);
}
void Lcd_data(char x)
{
	PORTB = x;
 456:	88 bb       	out	0x18, r24	; 24
	PORTC =  0x05;  //|= (1<<PINC0) | (1<<PINC2); 
 458:	85 e0       	ldi	r24, 0x05	; 5
 45a:	85 bb       	out	0x15, r24	; 21
 45c:	83 ec       	ldi	r24, 0xC3	; 195
 45e:	99 e0       	ldi	r25, 0x09	; 9
 460:	01 97       	sbiw	r24, 0x01	; 1
 462:	f1 f7       	brne	.-4      	; 0x460 <Lcd_data+0xa>
 464:	00 c0       	rjmp	.+0      	; 0x466 <Lcd_data+0x10>
 466:	00 00       	nop
	_delay_ms(10);
	PORTC = 0x01;  //|= (1<<PINC0); PORTC &= ~(1<<PINC2);
 468:	81 e0       	ldi	r24, 0x01	; 1
 46a:	85 bb       	out	0x15, r24	; 21
 46c:	83 ec       	ldi	r24, 0xC3	; 195
 46e:	99 e0       	ldi	r25, 0x09	; 9
 470:	01 97       	sbiw	r24, 0x01	; 1
 472:	f1 f7       	brne	.-4      	; 0x470 <Lcd_data+0x1a>
 474:	00 c0       	rjmp	.+0      	; 0x476 <Lcd_data+0x20>
 476:	00 00       	nop
	_delay_ms(10);
}
 478:	08 95       	ret

0000047a <Display>:

void Display(char x[])
{
 47a:	cf 93       	push	r28
 47c:	df 93       	push	r29
 47e:	ec 01       	movw	r28, r24
	int i;
	for(i=0; x[i]!='\0'; i++)
 480:	88 81       	ld	r24, Y
 482:	88 23       	and	r24, r24
 484:	31 f0       	breq	.+12     	; 0x492 <Display+0x18>
	_delay_ms(10);
	PORTC = 0x01;  //|= (1<<PINC0); PORTC &= ~(1<<PINC2);
	_delay_ms(10);
}

void Display(char x[])
 486:	21 96       	adiw	r28, 0x01	; 1
{
	int i;
	for(i=0; x[i]!='\0'; i++)
	{
		Lcd_data(x[i]);
 488:	0e 94 2b 02 	call	0x456	; 0x456 <Lcd_data>
}

void Display(char x[])
{
	int i;
	for(i=0; x[i]!='\0'; i++)
 48c:	89 91       	ld	r24, Y+
 48e:	88 23       	and	r24, r24
 490:	d9 f7       	brne	.-10     	; 0x488 <Display+0xe>
	{
		Lcd_data(x[i]);
	}
}
 492:	df 91       	pop	r29
 494:	cf 91       	pop	r28
 496:	08 95       	ret

00000498 <Lcd_int>:

void Lcd_int()
{
	Lcd_cmd(0x38);
 498:	88 e3       	ldi	r24, 0x38	; 56
 49a:	0e 94 49 00 	call	0x92	; 0x92 <Lcd_cmd>
	Lcd_cmd(0x0E);
 49e:	8e e0       	ldi	r24, 0x0E	; 14
 4a0:	0e 94 49 00 	call	0x92	; 0x92 <Lcd_cmd>
	Lcd_cmd(0x01);
 4a4:	81 e0       	ldi	r24, 0x01	; 1
 4a6:	0e 94 49 00 	call	0x92	; 0x92 <Lcd_cmd>
}
 4aa:	08 95       	ret

000004ac <main>:
//****************************************LCD END**************************************************//
	

int main(void)
{
	DDRD |= 1<<PIND5 | 1<<PIND3 | 1<<PIND0;                                   // Define direction resistor OCR1A(PD5) as output, PD3 for LED
 4ac:	81 b3       	in	r24, 0x11	; 17
 4ae:	89 62       	ori	r24, 0x29	; 41
 4b0:	81 bb       	out	0x11, r24	; 17
	DDRA &= ~(1<<PINA0) & ~(1<<PINA1) & ~(1<<PINA2) & ~(1<<PINA3) & ~(1<<PINA4);  //For sensor input
 4b2:	8a b3       	in	r24, 0x1a	; 26
 4b4:	80 7e       	andi	r24, 0xE0	; 224
 4b6:	8a bb       	out	0x1a, r24	; 26
	PORTA |= 1<<PINA0 | 1<<PINA1 | 1<<PINA2 | 1<<PINA3 | 1<<PINA4;
 4b8:	8b b3       	in	r24, 0x1b	; 27
 4ba:	8f 61       	ori	r24, 0x1F	; 31
 4bc:	8b bb       	out	0x1b, r24	; 27
	DDRB = 0xFF;                                                                 //LCD DATA PIN
 4be:	8f ef       	ldi	r24, 0xFF	; 255
 4c0:	87 bb       	out	0x17, r24	; 23
	DDRC = 0xFF;                                                                 //LCD Signal, STEPPER OUTPUT
 4c2:	84 bb       	out	0x14, r24	; 20
     
	
	
//******************** SERVO START TIMER**********************//
	TCCR1A |= 1<<WGM11 | 1<<COM1A1 | 1<<COM1A0;
 4c4:	8f b5       	in	r24, 0x2f	; 47
 4c6:	82 6c       	ori	r24, 0xC2	; 194
 4c8:	8f bd       	out	0x2f, r24	; 47
	TCCR1B |= 1<<WGM12 | 1<<WGM13 | 1<<CS10;
 4ca:	8e b5       	in	r24, 0x2e	; 46
 4cc:	89 61       	ori	r24, 0x19	; 25
 4ce:	8e bd       	out	0x2e, r24	; 46
	
	ICR1 = 19999;
 4d0:	8f e1       	ldi	r24, 0x1F	; 31
 4d2:	9e e4       	ldi	r25, 0x4E	; 78
 4d4:	97 bd       	out	0x27, r25	; 39
 4d6:	86 bd       	out	0x26, r24	; 38
/******************** SERVO END TIMER**************************/

OCR1A = ICR1 - 1500;
 4d8:	86 b5       	in	r24, 0x26	; 38
 4da:	97 b5       	in	r25, 0x27	; 39
 4dc:	8c 5d       	subi	r24, 0xDC	; 220
 4de:	95 40       	sbci	r25, 0x05	; 5
 4e0:	9b bd       	out	0x2b, r25	; 43
 4e2:	8a bd       	out	0x2a, r24	; 42

/***********************LCD ON*********************************/

Lcd_int();
 4e4:	0e 94 4c 02 	call	0x498	; 0x498 <Lcd_int>

Lcd_cmd(0x80);
 4e8:	80 e8       	ldi	r24, 0x80	; 128
 4ea:	0e 94 49 00 	call	0x92	; 0x92 <Lcd_cmd>
Display("Project On");
 4ee:	84 e7       	ldi	r24, 0x74	; 116
 4f0:	90 e0       	ldi	r25, 0x00	; 0
 4f2:	0e 94 3d 02 	call	0x47a	; 0x47a <Display>
 4f6:	87 ea       	ldi	r24, 0xA7	; 167
 4f8:	91 e6       	ldi	r25, 0x61	; 97
 4fa:	01 97       	sbiw	r24, 0x01	; 1
 4fc:	f1 f7       	brne	.-4      	; 0x4fa <main+0x4e>
 4fe:	00 c0       	rjmp	.+0      	; 0x500 <main+0x54>
 500:	00 00       	nop
_delay_ms(100);

Lcd_cmd(0x8B);
 502:	8b e8       	ldi	r24, 0x8B	; 139
 504:	0e 94 49 00 	call	0x92	; 0x92 <Lcd_cmd>
Display(":");
 508:	8f e7       	ldi	r24, 0x7F	; 127
 50a:	90 e0       	ldi	r25, 0x00	; 0
 50c:	0e 94 3d 02 	call	0x47a	; 0x47a <Display>
 510:	a7 ea       	ldi	r26, 0xA7	; 167
 512:	b1 e6       	ldi	r27, 0x61	; 97
 514:	11 97       	sbiw	r26, 0x01	; 1
 516:	f1 f7       	brne	.-4      	; 0x514 <main+0x68>
 518:	00 c0       	rjmp	.+0      	; 0x51a <main+0x6e>
 51a:	00 00       	nop
_delay_ms(100);

Lcd_cmd(0x8C);
 51c:	8c e8       	ldi	r24, 0x8C	; 140
 51e:	0e 94 49 00 	call	0x92	; 0x92 <Lcd_cmd>
Display("...");
 522:	80 e6       	ldi	r24, 0x60	; 96
 524:	90 e0       	ldi	r25, 0x00	; 0
 526:	0e 94 3d 02 	call	0x47a	; 0x47a <Display>
 52a:	87 ea       	ldi	r24, 0xA7	; 167
 52c:	91 e6       	ldi	r25, 0x61	; 97
 52e:	01 97       	sbiw	r24, 0x01	; 1
 530:	f1 f7       	brne	.-4      	; 0x52e <main+0x82>
 532:	00 c0       	rjmp	.+0      	; 0x534 <main+0x88>
 534:	00 00       	nop
_delay_ms(100);

Lcd_cmd(0xC0);
 536:	80 ec       	ldi	r24, 0xC0	; 192
 538:	0e 94 49 00 	call	0x92	; 0x92 <Lcd_cmd>
Display("SOLAR TREE");
 53c:	81 e8       	ldi	r24, 0x81	; 129
 53e:	90 e0       	ldi	r25, 0x00	; 0
 540:	0e 94 3d 02 	call	0x47a	; 0x47a <Display>
 544:	8f e3       	ldi	r24, 0x3F	; 63
 546:	9d e0       	ldi	r25, 0x0D	; 13
 548:	a3 e0       	ldi	r26, 0x03	; 3
 54a:	81 50       	subi	r24, 0x01	; 1
 54c:	90 40       	sbci	r25, 0x00	; 0
 54e:	a0 40       	sbci	r26, 0x00	; 0
 550:	e1 f7       	brne	.-8      	; 0x54a <main+0x9e>
 552:	00 c0       	rjmp	.+0      	; 0x554 <main+0xa8>
 554:	00 00       	nop
_delay_ms(1000);

Lcd_cmd(0X01);
 556:	81 e0       	ldi	r24, 0x01	; 1
 558:	0e 94 49 00 	call	0x92	; 0x92 <Lcd_cmd>
 55c:	a7 ea       	ldi	r26, 0xA7	; 167
 55e:	b1 e6       	ldi	r27, 0x61	; 97
 560:	11 97       	sbiw	r26, 0x01	; 1
 562:	f1 f7       	brne	.-4      	; 0x560 <main+0xb4>
 564:	00 c0       	rjmp	.+0      	; 0x566 <main+0xba>
 566:	00 00       	nop
_delay_ms(100);

Lcd_cmd(0X80);
 568:	80 e8       	ldi	r24, 0x80	; 128
 56a:	0e 94 49 00 	call	0x92	; 0x92 <Lcd_cmd>
Display("Project by");
 56e:	8c e8       	ldi	r24, 0x8C	; 140
 570:	90 e0       	ldi	r25, 0x00	; 0
 572:	0e 94 3d 02 	call	0x47a	; 0x47a <Display>
 576:	87 ea       	ldi	r24, 0xA7	; 167
 578:	91 e6       	ldi	r25, 0x61	; 97
 57a:	01 97       	sbiw	r24, 0x01	; 1
 57c:	f1 f7       	brne	.-4      	; 0x57a <main+0xce>
 57e:	00 c0       	rjmp	.+0      	; 0x580 <main+0xd4>
 580:	00 00       	nop
_delay_ms(100);

Lcd_cmd(0x8A);
 582:	8a e8       	ldi	r24, 0x8A	; 138
 584:	0e 94 49 00 	call	0x92	; 0x92 <Lcd_cmd>
Display("....");
 588:	87 e9       	ldi	r24, 0x97	; 151
 58a:	90 e0       	ldi	r25, 0x00	; 0
 58c:	0e 94 3d 02 	call	0x47a	; 0x47a <Display>
 590:	a7 ea       	ldi	r26, 0xA7	; 167
 592:	b1 e6       	ldi	r27, 0x61	; 97
 594:	11 97       	sbiw	r26, 0x01	; 1
 596:	f1 f7       	brne	.-4      	; 0x594 <main+0xe8>
 598:	00 c0       	rjmp	.+0      	; 0x59a <main+0xee>
 59a:	00 00       	nop
_delay_ms(100);

Lcd_cmd(0xC0);
 59c:	80 ec       	ldi	r24, 0xC0	; 192
 59e:	0e 94 49 00 	call	0x92	; 0x92 <Lcd_cmd>
Display("Arun,");
 5a2:	8c e9       	ldi	r24, 0x9C	; 156
 5a4:	90 e0       	ldi	r25, 0x00	; 0
 5a6:	0e 94 3d 02 	call	0x47a	; 0x47a <Display>
 5aa:	87 ea       	ldi	r24, 0xA7	; 167
 5ac:	91 e6       	ldi	r25, 0x61	; 97
 5ae:	01 97       	sbiw	r24, 0x01	; 1
 5b0:	f1 f7       	brne	.-4      	; 0x5ae <main+0x102>
 5b2:	00 c0       	rjmp	.+0      	; 0x5b4 <main+0x108>
 5b4:	00 00       	nop
_delay_ms(100);

Lcd_cmd(0xC5);
 5b6:	85 ec       	ldi	r24, 0xC5	; 197
 5b8:	0e 94 49 00 	call	0x92	; 0x92 <Lcd_cmd>
Display("Bhup,");
 5bc:	82 ea       	ldi	r24, 0xA2	; 162
 5be:	90 e0       	ldi	r25, 0x00	; 0
 5c0:	0e 94 3d 02 	call	0x47a	; 0x47a <Display>
 5c4:	a7 ea       	ldi	r26, 0xA7	; 167
 5c6:	b1 e6       	ldi	r27, 0x61	; 97
 5c8:	11 97       	sbiw	r26, 0x01	; 1
 5ca:	f1 f7       	brne	.-4      	; 0x5c8 <main+0x11c>
 5cc:	00 c0       	rjmp	.+0      	; 0x5ce <main+0x122>
 5ce:	00 00       	nop
_delay_ms(100);

Lcd_cmd(0xCB);
 5d0:	8b ec       	ldi	r24, 0xCB	; 203
 5d2:	0e 94 49 00 	call	0x92	; 0x92 <Lcd_cmd>
Display("Mohit,");
 5d6:	88 ea       	ldi	r24, 0xA8	; 168
 5d8:	90 e0       	ldi	r25, 0x00	; 0
 5da:	0e 94 3d 02 	call	0x47a	; 0x47a <Display>
 5de:	87 ea       	ldi	r24, 0xA7	; 167
 5e0:	91 e6       	ldi	r25, 0x61	; 97
 5e2:	01 97       	sbiw	r24, 0x01	; 1
 5e4:	f1 f7       	brne	.-4      	; 0x5e2 <main+0x136>
 5e6:	00 c0       	rjmp	.+0      	; 0x5e8 <main+0x13c>
 5e8:	00 00       	nop
		
		else if(bit_is_clear(PINA, 1))
		{	
			Lcd_cmd(0x01);
			_delay_ms(100);
			Display("Charging");
 5ea:	cf ea       	ldi	r28, 0xAF	; 175
 5ec:	d0 e0       	ldi	r29, 0x00	; 0
			_delay_ms(100);
			Lcd_cmd(0x8A);
			_delay_ms(100);
			Display("...");
 5ee:	00 e6       	ldi	r16, 0x60	; 96
 5f0:	10 e0       	ldi	r17, 0x00	; 0
			
			_delay_ms(100);
			PORTD &= ~(1<<PIND3);
			Lcd_cmd(0x01);
			_delay_ms(100);
			Display("LED OFF");
 5f2:	0f 2e       	mov	r0, r31
 5f4:	f8 eb       	ldi	r31, 0xB8	; 184
 5f6:	ef 2e       	mov	r14, r31
 5f8:	f0 e0       	ldi	r31, 0x00	; 0
 5fa:	ff 2e       	mov	r15, r31
 5fc:	f0 2d       	mov	r31, r0
			_delay_ms(100);
			Lcd_cmd(0xC0);
			_delay_ms(100);
			Display("Day");
 5fe:	0f 2e       	mov	r0, r31
 600:	f0 ec       	ldi	r31, 0xC0	; 192
 602:	cf 2e       	mov	r12, r31
 604:	f0 e0       	ldi	r31, 0x00	; 0
 606:	df 2e       	mov	r13, r31
 608:	f0 2d       	mov	r31, r0
/************************LCD END***********************************/	
	
	while(1)
	{
//*****************************SERVO START*********************************//
		if(bit_is_clear(PINA, 0))             
 60a:	c8 99       	sbic	0x19, 0	; 25
 60c:	38 c0       	rjmp	.+112    	; 0x67e <main+0x1d2>
		{
				Lcd_cmd(0x01);
 60e:	81 e0       	ldi	r24, 0x01	; 1
 610:	0e 94 49 00 	call	0x92	; 0x92 <Lcd_cmd>
 614:	a7 ea       	ldi	r26, 0xA7	; 167
 616:	b1 e6       	ldi	r27, 0x61	; 97
 618:	11 97       	sbiw	r26, 0x01	; 1
 61a:	f1 f7       	brne	.-4      	; 0x618 <main+0x16c>
 61c:	00 c0       	rjmp	.+0      	; 0x61e <main+0x172>
 61e:	00 00       	nop
				_delay_ms(100);
				Display("Charging");
 620:	ce 01       	movw	r24, r28
 622:	0e 94 3d 02 	call	0x47a	; 0x47a <Display>
 626:	87 ea       	ldi	r24, 0xA7	; 167
 628:	91 e6       	ldi	r25, 0x61	; 97
 62a:	01 97       	sbiw	r24, 0x01	; 1
 62c:	f1 f7       	brne	.-4      	; 0x62a <main+0x17e>
 62e:	00 c0       	rjmp	.+0      	; 0x630 <main+0x184>
 630:	00 00       	nop
				_delay_ms(100);
				Lcd_cmd(0x8A);
 632:	8a e8       	ldi	r24, 0x8A	; 138
 634:	0e 94 49 00 	call	0x92	; 0x92 <Lcd_cmd>
 638:	a7 ea       	ldi	r26, 0xA7	; 167
 63a:	b1 e6       	ldi	r27, 0x61	; 97
 63c:	11 97       	sbiw	r26, 0x01	; 1
 63e:	f1 f7       	brne	.-4      	; 0x63c <main+0x190>
 640:	00 c0       	rjmp	.+0      	; 0x642 <main+0x196>
 642:	00 00       	nop
				_delay_ms(100);
				Display("...");
 644:	c8 01       	movw	r24, r16
 646:	0e 94 3d 02 	call	0x47a	; 0x47a <Display>
 64a:	87 ea       	ldi	r24, 0xA7	; 167
 64c:	91 e6       	ldi	r25, 0x61	; 97
 64e:	01 97       	sbiw	r24, 0x01	; 1
 650:	f1 f7       	brne	.-4      	; 0x64e <main+0x1a2>
 652:	00 c0       	rjmp	.+0      	; 0x654 <main+0x1a8>
 654:	00 00       	nop
				_delay_ms(100);
				
			x = Rotation_Plus(p);
 656:	80 91 c6 00 	lds	r24, 0x00C6
 65a:	90 91 c7 00 	lds	r25, 0x00C7
 65e:	0e 94 5a 00 	call	0xb4	; 0xb4 <Rotation_Plus>
 662:	90 93 cb 00 	sts	0x00CB, r25
 666:	80 93 ca 00 	sts	0x00CA, r24
 66a:	8f e9       	ldi	r24, 0x9F	; 159
 66c:	96 e8       	ldi	r25, 0x86	; 134
 66e:	a1 e0       	ldi	r26, 0x01	; 1
 670:	81 50       	subi	r24, 0x01	; 1
 672:	90 40       	sbci	r25, 0x00	; 0
 674:	a0 40       	sbci	r26, 0x00	; 0
 676:	e1 f7       	brne	.-8      	; 0x670 <main+0x1c4>
 678:	00 c0       	rjmp	.+0      	; 0x67a <main+0x1ce>
 67a:	00 00       	nop
 67c:	39 c0       	rjmp	.+114    	; 0x6f0 <main+0x244>
			_delay_ms(500);
		}
		
		else if(bit_is_clear(PINA, 1))
 67e:	c9 99       	sbic	0x19, 1	; 25
 680:	37 c0       	rjmp	.+110    	; 0x6f0 <main+0x244>
		{	
			Lcd_cmd(0x01);
 682:	81 e0       	ldi	r24, 0x01	; 1
 684:	0e 94 49 00 	call	0x92	; 0x92 <Lcd_cmd>
 688:	a7 ea       	ldi	r26, 0xA7	; 167
 68a:	b1 e6       	ldi	r27, 0x61	; 97
 68c:	11 97       	sbiw	r26, 0x01	; 1
 68e:	f1 f7       	brne	.-4      	; 0x68c <main+0x1e0>
 690:	00 c0       	rjmp	.+0      	; 0x692 <main+0x1e6>
 692:	00 00       	nop
			_delay_ms(100);
			Display("Charging");
 694:	ce 01       	movw	r24, r28
 696:	0e 94 3d 02 	call	0x47a	; 0x47a <Display>
 69a:	87 ea       	ldi	r24, 0xA7	; 167
 69c:	91 e6       	ldi	r25, 0x61	; 97
 69e:	01 97       	sbiw	r24, 0x01	; 1
 6a0:	f1 f7       	brne	.-4      	; 0x69e <main+0x1f2>
 6a2:	00 c0       	rjmp	.+0      	; 0x6a4 <main+0x1f8>
 6a4:	00 00       	nop
			_delay_ms(100);
			Lcd_cmd(0x8A);
 6a6:	8a e8       	ldi	r24, 0x8A	; 138
 6a8:	0e 94 49 00 	call	0x92	; 0x92 <Lcd_cmd>
 6ac:	a7 ea       	ldi	r26, 0xA7	; 167
 6ae:	b1 e6       	ldi	r27, 0x61	; 97
 6b0:	11 97       	sbiw	r26, 0x01	; 1
 6b2:	f1 f7       	brne	.-4      	; 0x6b0 <main+0x204>
 6b4:	00 c0       	rjmp	.+0      	; 0x6b6 <main+0x20a>
 6b6:	00 00       	nop
			_delay_ms(100);
			Display("...");
 6b8:	c8 01       	movw	r24, r16
 6ba:	0e 94 3d 02 	call	0x47a	; 0x47a <Display>
 6be:	87 ea       	ldi	r24, 0xA7	; 167
 6c0:	91 e6       	ldi	r25, 0x61	; 97
 6c2:	01 97       	sbiw	r24, 0x01	; 1
 6c4:	f1 f7       	brne	.-4      	; 0x6c2 <main+0x216>
 6c6:	00 c0       	rjmp	.+0      	; 0x6c8 <main+0x21c>
 6c8:	00 00       	nop
			_delay_ms(100);
							
			x = Rotation_Minus(p);
 6ca:	80 91 c6 00 	lds	r24, 0x00C6
 6ce:	90 91 c7 00 	lds	r25, 0x00C7
 6d2:	0e 94 7a 00 	call	0xf4	; 0xf4 <Rotation_Minus>
 6d6:	90 93 cb 00 	sts	0x00CB, r25
 6da:	80 93 ca 00 	sts	0x00CA, r24
 6de:	8f e9       	ldi	r24, 0x9F	; 159
 6e0:	96 e8       	ldi	r25, 0x86	; 134
 6e2:	a1 e0       	ldi	r26, 0x01	; 1
 6e4:	81 50       	subi	r24, 0x01	; 1
 6e6:	90 40       	sbci	r25, 0x00	; 0
 6e8:	a0 40       	sbci	r26, 0x00	; 0
 6ea:	e1 f7       	brne	.-8      	; 0x6e4 <main+0x238>
 6ec:	00 c0       	rjmp	.+0      	; 0x6ee <main+0x242>
 6ee:	00 00       	nop
		}
		
		//*******************************SERVO END**********************************//
		
		//*****************************SERVO 1 START*********************************//
		if(bit_is_clear(PINA, 2))
 6f0:	ca 99       	sbic	0x19, 2	; 25
 6f2:	39 c0       	rjmp	.+114    	; 0x766 <main+0x2ba>
		{
			Lcd_cmd(0x01);
 6f4:	81 e0       	ldi	r24, 0x01	; 1
 6f6:	0e 94 49 00 	call	0x92	; 0x92 <Lcd_cmd>
 6fa:	a7 ea       	ldi	r26, 0xA7	; 167
 6fc:	b1 e6       	ldi	r27, 0x61	; 97
 6fe:	11 97       	sbiw	r26, 0x01	; 1
 700:	f1 f7       	brne	.-4      	; 0x6fe <main+0x252>
 702:	00 c0       	rjmp	.+0      	; 0x704 <main+0x258>
 704:	00 00       	nop
			_delay_ms(100);
			Display("Charging");
 706:	ce 01       	movw	r24, r28
 708:	0e 94 3d 02 	call	0x47a	; 0x47a <Display>
 70c:	87 ea       	ldi	r24, 0xA7	; 167
 70e:	91 e6       	ldi	r25, 0x61	; 97
 710:	01 97       	sbiw	r24, 0x01	; 1
 712:	f1 f7       	brne	.-4      	; 0x710 <main+0x264>
 714:	00 c0       	rjmp	.+0      	; 0x716 <main+0x26a>
 716:	00 00       	nop
			_delay_ms(100);
			Lcd_cmd(0x8A);
 718:	8a e8       	ldi	r24, 0x8A	; 138
 71a:	0e 94 49 00 	call	0x92	; 0x92 <Lcd_cmd>
 71e:	a7 ea       	ldi	r26, 0xA7	; 167
 720:	b1 e6       	ldi	r27, 0x61	; 97
 722:	11 97       	sbiw	r26, 0x01	; 1
 724:	f1 f7       	brne	.-4      	; 0x722 <main+0x276>
 726:	00 c0       	rjmp	.+0      	; 0x728 <main+0x27c>
 728:	00 00       	nop
			_delay_ms(100);
			Display("...");
 72a:	c8 01       	movw	r24, r16
 72c:	0e 94 3d 02 	call	0x47a	; 0x47a <Display>
 730:	87 ea       	ldi	r24, 0xA7	; 167
 732:	91 e6       	ldi	r25, 0x61	; 97
 734:	01 97       	sbiw	r24, 0x01	; 1
 736:	f1 f7       	brne	.-4      	; 0x734 <main+0x288>
 738:	00 c0       	rjmp	.+0      	; 0x73a <main+0x28e>
 73a:	00 00       	nop
			_delay_ms(100);
			
			y = Rotation_Plus_1(r);
 73c:	80 91 c4 00 	lds	r24, 0x00C4
 740:	90 91 c5 00 	lds	r25, 0x00C5
 744:	0e 94 23 01 	call	0x246	; 0x246 <Rotation_Plus_1>
 748:	90 93 c9 00 	sts	0x00C9, r25
 74c:	80 93 c8 00 	sts	0x00C8, r24
 750:	8f e9       	ldi	r24, 0x9F	; 159
 752:	96 e8       	ldi	r25, 0x86	; 134
 754:	a1 e0       	ldi	r26, 0x01	; 1
 756:	81 50       	subi	r24, 0x01	; 1
 758:	90 40       	sbci	r25, 0x00	; 0
 75a:	a0 40       	sbci	r26, 0x00	; 0
 75c:	e1 f7       	brne	.-8      	; 0x756 <main+0x2aa>
 75e:	00 c0       	rjmp	.+0      	; 0x760 <main+0x2b4>
 760:	00 00       	nop
			_delay_ms(500);
			
			PORTD &= ~(1<<PIND0);
 762:	90 98       	cbi	0x12, 0	; 18
 764:	b9 c0       	rjmp	.+370    	; 0x8d8 <__stack+0x79>
			
		}
		
		else if(bit_is_clear(PINA, 3))
 766:	cb 99       	sbic	0x19, 3	; 25
 768:	39 c0       	rjmp	.+114    	; 0x7dc <main+0x330>
		{
			Lcd_cmd(0x01);
 76a:	81 e0       	ldi	r24, 0x01	; 1
 76c:	0e 94 49 00 	call	0x92	; 0x92 <Lcd_cmd>
 770:	a7 ea       	ldi	r26, 0xA7	; 167
 772:	b1 e6       	ldi	r27, 0x61	; 97
 774:	11 97       	sbiw	r26, 0x01	; 1
 776:	f1 f7       	brne	.-4      	; 0x774 <main+0x2c8>
 778:	00 c0       	rjmp	.+0      	; 0x77a <main+0x2ce>
 77a:	00 00       	nop
			_delay_ms(100);
			Display("Charging");
 77c:	ce 01       	movw	r24, r28
 77e:	0e 94 3d 02 	call	0x47a	; 0x47a <Display>
 782:	87 ea       	ldi	r24, 0xA7	; 167
 784:	91 e6       	ldi	r25, 0x61	; 97
 786:	01 97       	sbiw	r24, 0x01	; 1
 788:	f1 f7       	brne	.-4      	; 0x786 <main+0x2da>
 78a:	00 c0       	rjmp	.+0      	; 0x78c <main+0x2e0>
 78c:	00 00       	nop
			_delay_ms(100);
			Lcd_cmd(0x8A);
 78e:	8a e8       	ldi	r24, 0x8A	; 138
 790:	0e 94 49 00 	call	0x92	; 0x92 <Lcd_cmd>
 794:	a7 ea       	ldi	r26, 0xA7	; 167
 796:	b1 e6       	ldi	r27, 0x61	; 97
 798:	11 97       	sbiw	r26, 0x01	; 1
 79a:	f1 f7       	brne	.-4      	; 0x798 <main+0x2ec>
 79c:	00 c0       	rjmp	.+0      	; 0x79e <main+0x2f2>
 79e:	00 00       	nop
			_delay_ms(100);
			Display("...");
 7a0:	c8 01       	movw	r24, r16
 7a2:	0e 94 3d 02 	call	0x47a	; 0x47a <Display>
 7a6:	87 ea       	ldi	r24, 0xA7	; 167
 7a8:	91 e6       	ldi	r25, 0x61	; 97
 7aa:	01 97       	sbiw	r24, 0x01	; 1
 7ac:	f1 f7       	brne	.-4      	; 0x7aa <main+0x2fe>
 7ae:	00 c0       	rjmp	.+0      	; 0x7b0 <main+0x304>
 7b0:	00 00       	nop
			_delay_ms(100);
			
			y = Rotation_Minus_1(r);
 7b2:	80 91 c4 00 	lds	r24, 0x00C4
 7b6:	90 91 c5 00 	lds	r25, 0x00C5
 7ba:	0e 94 45 01 	call	0x28a	; 0x28a <Rotation_Minus_1>
 7be:	90 93 c9 00 	sts	0x00C9, r25
 7c2:	80 93 c8 00 	sts	0x00C8, r24
 7c6:	8f e9       	ldi	r24, 0x9F	; 159
 7c8:	96 e8       	ldi	r25, 0x86	; 134
 7ca:	a1 e0       	ldi	r26, 0x01	; 1
 7cc:	81 50       	subi	r24, 0x01	; 1
 7ce:	90 40       	sbci	r25, 0x00	; 0
 7d0:	a0 40       	sbci	r26, 0x00	; 0
 7d2:	e1 f7       	brne	.-8      	; 0x7cc <main+0x320>
 7d4:	00 c0       	rjmp	.+0      	; 0x7d6 <main+0x32a>
 7d6:	00 00       	nop
			_delay_ms(500);
			
			PORTD &= ~(1<<PIND0);
 7d8:	90 98       	cbi	0x12, 0	; 18
 7da:	7e c0       	rjmp	.+252    	; 0x8d8 <__stack+0x79>
		}
		
		//*******************************SERVO 1 END**********************************//
		
		
		else if(bit_is_clear(PINA, 4))  
 7dc:	cc 99       	sbic	0x19, 4	; 25
 7de:	55 c0       	rjmp	.+170    	; 0x88a <__stack+0x2b>
		{                               
		   x = Reset_to_Zero(p);
 7e0:	80 91 c6 00 	lds	r24, 0x00C6
 7e4:	90 91 c7 00 	lds	r25, 0x00C7
 7e8:	0e 94 c7 00 	call	0x18e	; 0x18e <Reset_to_Zero>
 7ec:	90 93 cb 00 	sts	0x00CB, r25
 7f0:	80 93 ca 00 	sts	0x00CA, r24
 7f4:	8f e9       	ldi	r24, 0x9F	; 159
 7f6:	96 e8       	ldi	r25, 0x86	; 134
 7f8:	a1 e0       	ldi	r26, 0x01	; 1
 7fa:	81 50       	subi	r24, 0x01	; 1
 7fc:	90 40       	sbci	r25, 0x00	; 0
 7fe:	a0 40       	sbci	r26, 0x00	; 0
 800:	e1 f7       	brne	.-8      	; 0x7fa <main+0x34e>
 802:	00 c0       	rjmp	.+0      	; 0x804 <main+0x358>
 804:	00 00       	nop
			_delay_ms(500);
			
			y = Reset_to_Zero_1(r);
 806:	80 91 c4 00 	lds	r24, 0x00C4
 80a:	90 91 c5 00 	lds	r25, 0x00C5
 80e:	0e 94 94 01 	call	0x328	; 0x328 <Reset_to_Zero_1>
 812:	90 93 c9 00 	sts	0x00C9, r25
 816:	80 93 c8 00 	sts	0x00C8, r24
 81a:	8f e9       	ldi	r24, 0x9F	; 159
 81c:	96 e8       	ldi	r25, 0x86	; 134
 81e:	a1 e0       	ldi	r26, 0x01	; 1
 820:	81 50       	subi	r24, 0x01	; 1
 822:	90 40       	sbci	r25, 0x00	; 0
 824:	a0 40       	sbci	r26, 0x00	; 0
 826:	e1 f7       	brne	.-8      	; 0x820 <main+0x374>
 828:	00 c0       	rjmp	.+0      	; 0x82a <main+0x37e>
 82a:	00 00       	nop
			_delay_ms(500);
			
			PORTD &= ~(1<<PIND0);
 82c:	90 98       	cbi	0x12, 0	; 18
			
			Led_On();
 82e:	0e 94 f1 01 	call	0x3e2	; 0x3e2 <Led_On>
 832:	a7 ea       	ldi	r26, 0xA7	; 167
 834:	b1 e6       	ldi	r27, 0x61	; 97
 836:	11 97       	sbiw	r26, 0x01	; 1
 838:	f1 f7       	brne	.-4      	; 0x836 <main+0x38a>
 83a:	00 c0       	rjmp	.+0      	; 0x83c <main+0x390>
 83c:	00 00       	nop
			
			_delay_ms(100);
			PORTD &= ~(1<<PIND3);
 83e:	93 98       	cbi	0x12, 3	; 18
			Lcd_cmd(0x01);
 840:	81 e0       	ldi	r24, 0x01	; 1
 842:	0e 94 49 00 	call	0x92	; 0x92 <Lcd_cmd>
 846:	87 ea       	ldi	r24, 0xA7	; 167
 848:	91 e6       	ldi	r25, 0x61	; 97
 84a:	01 97       	sbiw	r24, 0x01	; 1
 84c:	f1 f7       	brne	.-4      	; 0x84a <main+0x39e>
 84e:	00 c0       	rjmp	.+0      	; 0x850 <main+0x3a4>
 850:	00 00       	nop
			_delay_ms(100);
			Display("LED OFF");
 852:	c7 01       	movw	r24, r14
 854:	0e 94 3d 02 	call	0x47a	; 0x47a <Display>
 858:	a7 ea       	ldi	r26, 0xA7	; 167
 85a:	b1 e6       	ldi	r27, 0x61	; 97
 85c:	11 97       	sbiw	r26, 0x01	; 1
 85e:	f1 f7       	brne	.-4      	; 0x85c <main+0x3b0>
 860:	00 c0       	rjmp	.+0      	; 0x862 <__stack+0x3>
 862:	00 00       	nop
			_delay_ms(100);
			Lcd_cmd(0xC0);
 864:	80 ec       	ldi	r24, 0xC0	; 192
 866:	0e 94 49 00 	call	0x92	; 0x92 <Lcd_cmd>
 86a:	87 ea       	ldi	r24, 0xA7	; 167
 86c:	91 e6       	ldi	r25, 0x61	; 97
 86e:	01 97       	sbiw	r24, 0x01	; 1
 870:	f1 f7       	brne	.-4      	; 0x86e <__stack+0xf>
 872:	00 c0       	rjmp	.+0      	; 0x874 <__stack+0x15>
 874:	00 00       	nop
			_delay_ms(100);
			Display("Day");
 876:	c6 01       	movw	r24, r12
 878:	0e 94 3d 02 	call	0x47a	; 0x47a <Display>
 87c:	a7 ea       	ldi	r26, 0xA7	; 167
 87e:	b1 e6       	ldi	r27, 0x61	; 97
 880:	11 97       	sbiw	r26, 0x01	; 1
 882:	f1 f7       	brne	.-4      	; 0x880 <__stack+0x21>
 884:	00 c0       	rjmp	.+0      	; 0x886 <__stack+0x27>
 886:	00 00       	nop
 888:	27 c0       	rjmp	.+78     	; 0x8d8 <__stack+0x79>
		}
		
	
		else
		{
			x = Retain_Position(p);     //SERVO RETAIN POSITION
 88a:	80 91 c6 00 	lds	r24, 0x00C6
 88e:	90 91 c7 00 	lds	r25, 0x00C7
 892:	0e 94 98 00 	call	0x130	; 0x130 <Retain_Position>
 896:	90 93 cb 00 	sts	0x00CB, r25
 89a:	80 93 ca 00 	sts	0x00CA, r24
 89e:	8f e9       	ldi	r24, 0x9F	; 159
 8a0:	96 e8       	ldi	r25, 0x86	; 134
 8a2:	a1 e0       	ldi	r26, 0x01	; 1
 8a4:	81 50       	subi	r24, 0x01	; 1
 8a6:	90 40       	sbci	r25, 0x00	; 0
 8a8:	a0 40       	sbci	r26, 0x00	; 0
 8aa:	e1 f7       	brne	.-8      	; 0x8a4 <__stack+0x45>
 8ac:	00 c0       	rjmp	.+0      	; 0x8ae <__stack+0x4f>
 8ae:	00 00       	nop
			_delay_ms(500);
			
			y = Retain_Position_1(r);     //SERVO RETAIN POSITION
 8b0:	80 91 c4 00 	lds	r24, 0x00C4
 8b4:	90 91 c5 00 	lds	r25, 0x00C5
 8b8:	0e 94 64 01 	call	0x2c8	; 0x2c8 <Retain_Position_1>
 8bc:	90 93 c9 00 	sts	0x00C9, r25
 8c0:	80 93 c8 00 	sts	0x00C8, r24
 8c4:	8f e9       	ldi	r24, 0x9F	; 159
 8c6:	96 e8       	ldi	r25, 0x86	; 134
 8c8:	a1 e0       	ldi	r26, 0x01	; 1
 8ca:	81 50       	subi	r24, 0x01	; 1
 8cc:	90 40       	sbci	r25, 0x00	; 0
 8ce:	a0 40       	sbci	r26, 0x00	; 0
 8d0:	e1 f7       	brne	.-8      	; 0x8ca <__stack+0x6b>
 8d2:	00 c0       	rjmp	.+0      	; 0x8d4 <__stack+0x75>
 8d4:	00 00       	nop
			_delay_ms(500);
			
			PORTD &= ~(1<<PIND0);
 8d6:	90 98       	cbi	0x12, 0	; 18
		
		}
		p = x;
 8d8:	80 91 ca 00 	lds	r24, 0x00CA
 8dc:	90 91 cb 00 	lds	r25, 0x00CB
 8e0:	90 93 c7 00 	sts	0x00C7, r25
 8e4:	80 93 c6 00 	sts	0x00C6, r24
		r = y;
 8e8:	80 91 c8 00 	lds	r24, 0x00C8
 8ec:	90 91 c9 00 	lds	r25, 0x00C9
 8f0:	90 93 c5 00 	sts	0x00C5, r25
 8f4:	80 93 c4 00 	sts	0x00C4, r24
	
	}
 8f8:	88 ce       	rjmp	.-752    	; 0x60a <main+0x15e>

000008fa <__divmodhi4>:
 8fa:	97 fb       	bst	r25, 7
 8fc:	09 2e       	mov	r0, r25
 8fe:	07 26       	eor	r0, r23
 900:	0a d0       	rcall	.+20     	; 0x916 <__divmodhi4_neg1>
 902:	77 fd       	sbrc	r23, 7
 904:	04 d0       	rcall	.+8      	; 0x90e <__divmodhi4_neg2>
 906:	0c d0       	rcall	.+24     	; 0x920 <__udivmodhi4>
 908:	06 d0       	rcall	.+12     	; 0x916 <__divmodhi4_neg1>
 90a:	00 20       	and	r0, r0
 90c:	1a f4       	brpl	.+6      	; 0x914 <__divmodhi4_exit>

0000090e <__divmodhi4_neg2>:
 90e:	70 95       	com	r23
 910:	61 95       	neg	r22
 912:	7f 4f       	sbci	r23, 0xFF	; 255

00000914 <__divmodhi4_exit>:
 914:	08 95       	ret

00000916 <__divmodhi4_neg1>:
 916:	f6 f7       	brtc	.-4      	; 0x914 <__divmodhi4_exit>
 918:	90 95       	com	r25
 91a:	81 95       	neg	r24
 91c:	9f 4f       	sbci	r25, 0xFF	; 255
 91e:	08 95       	ret

00000920 <__udivmodhi4>:
 920:	aa 1b       	sub	r26, r26
 922:	bb 1b       	sub	r27, r27
 924:	51 e1       	ldi	r21, 0x11	; 17
 926:	07 c0       	rjmp	.+14     	; 0x936 <__udivmodhi4_ep>

00000928 <__udivmodhi4_loop>:
 928:	aa 1f       	adc	r26, r26
 92a:	bb 1f       	adc	r27, r27
 92c:	a6 17       	cp	r26, r22
 92e:	b7 07       	cpc	r27, r23
 930:	10 f0       	brcs	.+4      	; 0x936 <__udivmodhi4_ep>
 932:	a6 1b       	sub	r26, r22
 934:	b7 0b       	sbc	r27, r23

00000936 <__udivmodhi4_ep>:
 936:	88 1f       	adc	r24, r24
 938:	99 1f       	adc	r25, r25
 93a:	5a 95       	dec	r21
 93c:	a9 f7       	brne	.-22     	; 0x928 <__udivmodhi4_loop>
 93e:	80 95       	com	r24
 940:	90 95       	com	r25
 942:	bc 01       	movw	r22, r24
 944:	cd 01       	movw	r24, r26
 946:	08 95       	ret

00000948 <_exit>:
 948:	f8 94       	cli

0000094a <__stop_program>:
 94a:	ff cf       	rjmp	.-2      	; 0x94a <__stop_program>
